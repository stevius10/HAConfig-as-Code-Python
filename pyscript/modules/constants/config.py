from constants.expressions import EXPR_TIME_SERVICE_FILEBACKUP_CRON
from constants.secrets import SYSTEM_FILES

# Log

LOG_HA_FILE = "home-assistant.log"
LOG_HA_SIZE = 28
LOG_HA_SIZE_TAIL = 7

LOG_ARCHIVE_SIZE = 200
LOG_ARCHIVE_SUFFIX = "1"

LOG_TRUNCATE_BLOCK_DELAY = 15
LOG_TRUNCATE_IO_RETRY = 3

LOG_LOGGER_SYS = "py"
LOG_LOGGING_LEVEL = "info"

# Notifications

DEFAULT_NOTIFICATION_TARGET = "home"

# Paths

PATH_DIR_CONFIG = "/config"

PATH_DIR_PY_LOG = f"{PATH_DIR_CONFIG}/pyscript/logs/"
PATH_DIR_PY_NATIVE = f"{PATH_DIR_CONFIG}/pyscript/python"

PATH_LOG_HA = f"{PATH_DIR_CONFIG}/{LOG_HA_FILE}"
PATH_LOG_PY_HA = f"{PATH_DIR_PY_LOG}/{LOG_HA_FILE}"

PATH_DOCKER_LOG_HA = f"/homeassistant/{LOG_HA_FILE}"
PATH_DOCKER_LOG_PY_HA = f"pyscript/logs/{LOG_HA_FILE}"

# Services

SERVICES_AUTO = { 'shell_command.filebackup': EXPR_TIME_SERVICE_FILEBACKUP_CRON }

# System

SYSTEM_CONFIG_EVENT_STARTED_DELAY = 3

SYSTEM_ENVIRONMENT = { "ZDOTDIR": f"{PATH_DIR_CONFIG}/.storage/zsh" }
SYSTEM_FILES.update({ f"{PATH_DIR_CONFIG}/files/.zshrc": SYSTEM_ENVIRONMENT['ZDOTDIR']})
SYSTEM_LINKS = { 
  PATH_DOCKER_LOG_HA: PATH_DOCKER_LOG_PY_HA, 
  f"{PATH_DOCKER_LOG_HA}.{LOG_ARCHIVE_SUFFIX}": f"{PATH_DOCKER_LOG_PY_HA}.{LOG_ARCHIVE_SUFFIX}"
}